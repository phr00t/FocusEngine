<?xml version="1.0" encoding="utf-8"?>
<!--
Build file used to build Xenko and package it from the command line.
Example of use: 
"C:\Program Files (x86)\MSBuild\14.0\Bin\MSBuild" Xenko.build /t:Package
-->
<Project ToolsVersion="15.0" DefaultTarget="Help" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <XenkoRoot>$(MSBuildThisFileDirectory)..\</XenkoRoot>
    <XenkoSolution>$(XenkoRoot)build\Xenko</XenkoSolution>
    <XenkoSolutionLauncher>$(XenkoRoot)build\Xenko.Launcher</XenkoSolutionLauncher>
    <XenkoPlatforms Condition="'$(XenkoPlatforms)' == ''">Windows</XenkoPlatforms>
    <BuildProperties>Configuration=Release;NoWarn=1591;DeployExtension=false;XenkoPlatforms=$([MSBuild]::Escape('$(XenkoPlatforms)'));XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll)</BuildProperties>
    <XenkoSign Condition="'$(XenkoSign)' == ''">true</XenkoSign>
    <BuildProperties Condition="'$(XenkoSign)' != ''">$(BuildProperties);XenkoSign=$(XenkoSign)</BuildProperties>
    <NuGetPath>$(MSBuildThisFileDirectory).nuget\NuGet.exe</NuGetPath>
    <XunitRunnerConsoleVersion>2.4.1</XunitRunnerConsoleVersion>
    <XenkoStoreUrl Condition="'$(XenkoStoreUrl)' == ''">https://api.nuget.org/v3/index.json</XenkoStoreUrl>
    <AdvancedInstallerPath Condition="'$(AdvancedInstallerPath)' == '' And Exists('$(MSBuildProgramFiles32)\Caphyon\Advanced Installer 17.9\bin\x86\AdvancedInstaller.com')">$(MSBuildProgramFiles32)\Caphyon\Advanced Installer 17.9\bin\x86\AdvancedInstaller.com</AdvancedInstallerPath>
    <XenkoBuildPrerequisitesInstaller Condition="'$(XenkoBuildPrerequisitesInstaller)' == ''">true</XenkoBuildPrerequisitesInstaller>
  </PropertyGroup>

  <UsingTask TaskName="Xenko.GitVersioning.GenerateVersionFile" AssemblyFile="$(XenkoRoot)deps\Xenko.GitVersioning\bin\Debug\net472\Xenko.GitVersioning.dll" />
  
  <Target Name="Help">
    <Message Importance="high" Text="TODO"/>
  </Target>
  
  <!--
  VSIX Xenko plugin
  Don't forget to build for VS2013 by using MSBuild 12.0, 
  or if you're using a newer version of MSBuild, pass the flag /p:VisualStudioVersion=12.0 when calling MSBuild in the command line.
  -->
  <Target Name="VSIXPlugin" DependsOnTargets="Restore">
    <ItemGroup>
      <FilesToDeleteVSIX Include="$(XenkoRoot)bin\vsix\*.nupkg"/>
    </ItemGroup>

    <Delete Files="@(FilesToDeleteVSIX)"/>

    <MSBuild Targets="91-VisualStudio\Xenko_VisualStudio_Package;91-VisualStudio\Xenko_VisualStudio_PackageInstall" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties);Platform=Mixed Platforms"/>
    <Exec Command='"$(NuGetPath)" pack "$(XenkoRoot)sources\tools\Xenko.VisualStudio.Package\Xenko.VisualStudio.Package.nuspec" -BasePath "$(XenkoRoot)sources\tools\Xenko.VisualStudio.Package" -OutputDirectory "$(XenkoRoot)bin\vsix"' />
  </Target>
  
  <!--
  Package Installer: install-prerequisites.exe
  -->
  <Target Name="PrerequisitesInstaller">
    <Delete Files="$(XenkoRoot)Bin\Prerequisites\install-prerequisites.exe"/>
    <Exec Command='"$(AdvancedInstallerPath)" /rebuild "$(XenkoRoot)sources\prerequisites\prerequisites.aip"'/>
  </Target>

  <!--
  Perform a full build: Build, Package
  -->
  <Target Name="FullBuild">
    <CallTarget Targets="Build"/>
    <CallTarget Targets="Package"/>
    <CallTarget Targets="VSIXPlugin"/>
  </Target>
  
  <!--
  Publish Xenko nupkg from this folder to the store
  -->
  <Target Name="Publish">
    <Error Condition="'$(XenkoStoreApiKey)' == ''" Text="Missing env variable XenkoStoreApiKey"/>
    <!-- Waiting 30min in case NuGet.Gallery/Server takes time to process -->
    <ItemGroup>
      <NuGetPackage Include="..\bin\packages\*.nupkg"/>
      <!-- Remove GameStudio (pushed in a second stage) -->
      <NuGetPackage Remove="@(NuGetPackage)" Condition="$([System.String]::Copy('%(Filename)').Contains('Xenko.GameStudio'))"/>
      <!-- Remove Samples.Templates (we use -SkipDuplicate since version is rarely bumped) -->
      <NuGetPackage Remove="@(NuGetPackage)" Condition="$([System.String]::Copy('%(Filename)').Contains('Xenko.Samples.Templates'))"/>
    </ItemGroup>
    <Exec Command='"$(NuGetPath)" push %(NuGetPackage.Identity) -ApiKey $(XenkoStoreApiKey) -Source $(XenkoStoreUrl) -Timeout 1800 -NoSymbols'/>
    <!-- Push GameStudio so that dependencies are already uploaded -->
    <Exec Command='"$(NuGetPath)" push ..\bin\packages\Xenko.GameStudio*.nupkg -ApiKey $(XenkoStoreApiKey) -Source $(XenkoStoreUrl) -Timeout 1800 -NoSymbols'/>
  </Target>

  <!--
  Publish VSIX nupkg from this folder to the store
  -->
  <Target Name="PublishVSIX">
    <Error Condition="'$(XenkoStoreApiKey)' == ''" Text="Missing env variable XenkoStoreApiKey"/>
    <Exec Command='"$(NuGetPath)" push ..\bin\vsix\*.nupkg -ApiKey $(XenkoStoreApiKey) -Source $(XenkoStoreUrl) -NoSymbols'/>
  </Target>
  
  <!--
  Build Xenko: Windows, Android, iOS, Windows 10 (UWP)
  -->
  <Target Name="Clean">
    <Exec Command="RMDIR /Q /S $(XenkoRoot)\Bin"/>
  </Target>
  
  <!-- Package -->
  <Target Name="PreparePackageBuild">
    <PropertyGroup>
      <BuildProperties>$(BuildProperties);XenkoPublicApi=true;XenkoPackageBuild=true</BuildProperties>
    </PropertyGroup>
    
    <ItemGroup>
      <FilesToDeletePackages Include="$(XenkoRoot)bin\packages\*.nupkg"/>
    </ItemGroup>

    <Delete Files="@(FilesToDeletePackages)"/>

    <!-- Make sure Xenko.GitVersioning is built to run the task to update package version.
         It might be better to move it to a prebuilt assembly if that becomes a problem.
    -->
    <MSBuild Targets="Restore" Projects="$(XenkoRoot)deps\Xenko.GitVersioning\Xenko.GitVersioning.csproj"/>
    <MSBuild Targets="Build" Projects="$(XenkoRoot)deps\Xenko.GitVersioning\Xenko.GitVersioning.csproj"/>
    
    <!-- Create SharedAssemblyInfo.NuGet.cs with Git information (different between official build and internal builds) -->
    <GenerateVersionFile RootDirectory="$(XenkoRoot)" VersionFile="sources\shared\SharedAssemblyInfo.cs" GeneratedVersionFile="sources\shared\SharedAssemblyInfo.NuGet.cs" RevisionGitHeight="true" SpecialVersionGitCommit="true">
      <Output TaskParameter="NuGetVersion" PropertyName="XenkoPackageVersion"/>
    </GenerateVersionFile>

    <Message Text="Done preparing build for version $(XenkoPackageVersion)"/>
    <TeamCitySetBuildNumber BuildNumber="$(XenkoPackageVersion)" Condition="'$(TEAMCITY_BUILD_PROPERTIES_FILE)' != '' " />
  </Target>
  <PropertyGroup>
    <_XenkoPackageTargetPrerequisitesInstaller Condition="'$(XenkoBuildPrerequisitesInstaller)' == 'true'">PrerequisitesInstaller</_XenkoPackageTargetPrerequisitesInstaller>
  </PropertyGroup>
  <Target Name="Package" DependsOnTargets="PreparePackageBuild;$(_XenkoPackageTargetPrerequisitesInstaller);Build;VSIXPlugin"/>

  <Target Name="RestoreInternal">
    <MSBuild Targets="Restore" Projects="$(XenkoSolution).sln" Properties="XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll);XenkoGraphicsApis=$(XenkoGraphicsApis);XenkoPlatforms=$(XenkoPlatforms)" />
  </Target>
  
  <Target Name="Restore">
    <CallTarget Targets="RestoreInternal" />
  </Target>

  <Target Name="Build">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution);XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll)"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties);Platform=Mixed Platforms"/>
  </Target>

  <Target Name="BuildRuntime">
    <PropertyGroup>
      <XenkoSolution>$(XenkoSolution).Runtime</XenkoSolution>
    </PropertyGroup>
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution)"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties)"/>
  </Target>
  
  <Target Name="BuildWindows">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution);XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll)"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties);XenkoSkipAutoPack=true;XenkoSkipUnitTests=true;XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll)"/>
  </Target>

  <Target Name="BuildWindowsDirect3D11">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution).Runtime"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).Runtime.sln" Properties="$(BuildProperties);XenkoGraphicsApis=Direct3D11;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>
  
  <Target Name="BuildWindowsDirect3D12">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution).Runtime;XenkoGraphicsApis=Direct3D12"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).Runtime.sln" Properties="$(BuildProperties);XenkoGraphicsApis=Direct3D12;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>

  <Target Name="BuildWindowsOpenGL">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution).Runtime;XenkoGraphicsApis=OpenGL"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).Runtime.sln" Properties="$(BuildProperties);XenkoGraphicsApis=OpenGL;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>

  <Target Name="BuildWindowsOpenGLES">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution).Runtime;XenkoGraphicsApis=OpenGLES"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).Runtime.sln" Properties="$(BuildProperties);XenkoGraphicsApis=OpenGLES;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>

  <Target Name="BuildAndroid">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=Android;XenkoSolution=$(XenkoSolution).Android"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).Android.sln" Properties="$(BuildProperties);XenkoPlatforms=Android;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>

  <Target Name="BuildiOS">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=iOS;XenkoSolution=$(XenkoSolution).iOS"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).iOS.sln" Properties="$(BuildProperties);XenkoPlatforms=iOS;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>
  
  <Target Name="BuildWindowsStore">
    <!-- Only a warning since build servers might still call this target for old branches -->
    <Warning Text="Windows Store doesn't exist anymore"/>
  </Target>

  <Target Name="BuildWindows10" DependsOnTargets="BuildUWP" />

  <Target Name="BuildUWP">
    <PropertyGroup>
      <XenkoSolution>$(XenkoSolution).Runtime</XenkoSolution>
      <XenkoPlatforms>UWP</XenkoPlatforms>
    </PropertyGroup>
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution)"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties);XenkoPlatforms=$(XenkoPlatforms);XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>
  
  <Target Name="BuildWindowsPhone">
    <!-- Only a warning since build servers might still call this target for old branches -->
    <Warning Text="Windows Phone doesn't exist anymore"/>
  </Target>
  
  <Target Name="BuildWindowsVulkan">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution).Runtime;XenkoGraphicsApis=Vulkan"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).Runtime.sln" Properties="$(BuildProperties);XenkoGraphicsApis=Vulkan;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>
  
  <Target Name="BuildLinux">
    <PropertyGroup>
      <XenkoSolution>$(XenkoSolution).Runtime</XenkoSolution>
      <XenkoPlatforms>Linux</XenkoPlatforms>
    </PropertyGroup>
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution);XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll)"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties);XenkoPlatforms=$(XenkoPlatforms);XenkoGraphicsApis=OpenGL;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true;XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll)"/>
  </Target> 

  <Target Name="BuildLinuxVulkan">
    <PropertyGroup>
      <XenkoSolution>$(XenkoSolution).Runtime</XenkoSolution>
      <XenkoPlatforms>Linux</XenkoPlatforms>
    </PropertyGroup>
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution);XenkoGraphicsApis=Vulkan"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties);XenkoPlatforms=$(XenkoPlatforms);XenkoGraphicsApis=Vulkan;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target> 
  
  <Target Name="BuildmacOS">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoSolution=$(XenkoSolution).macOS"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).macOS.sln" Properties="$(BuildProperties);Platform=macOS"/>
  </Target> 

  <Target Name="DownloadXunitRunnerConsole">
    <MakeDir Directories="$(MSBuildThisFileDirectory)packages"/>
    <PropertyGroup>
      <XunitRunnerConsolePathDefault>$(MSBuildThisFileDirectory)packages\xunit.runner.console.$(XunitRunnerConsoleVersion)\tools\net472\xunit.console.exe</XunitRunnerConsolePathDefault>
      <XunitRunnerConsolePathX86>$(MSBuildThisFileDirectory)packages\xunit.runner.console.$(XunitRunnerConsoleVersion)\tools\net472\xunit.console.x86.exe</XunitRunnerConsolePathX86>
    </PropertyGroup>
    <Exec Command='"$(NuGetPath)" install xunit.runner.console -Version $(XunitRunnerConsoleVersion)' Condition="!Exists('$(XunitRunnerConsolePathDefault)')" WorkingDirectory="$(MSBuildThisFileDirectory)packages" />
    <Error Text="Could not find xunit.runner at expected location [$(XunitRunnerConsolePathDefault)]" Condition="!Exists('$(XunitRunnerConsolePathDefault)')"/>
  </Target>
  
  <Target Name="RunTestsWindows" DependsOnTargets="DownloadXunitRunnerConsole">
    <!-- Remove artifacts generated during previous run -->
    <Delete Files="$(MSBuildThisFileDirectory)..\tests\local\**\*.*" />
    <!-- By default, enable all known categories -->
    <PropertyGroup>
      <XenkoTestCategories Condition="'$(XenkoTestCategories)' == ''">Simple;Game;VSPackage</XenkoTestCategories>
    </PropertyGroup>
    <CreateItem Include="$(XenkoTestCategories)">
      <Output TaskParameter="Include" ItemName="XenkoTestCategoriesItem"/>
    </CreateItem>
    <!-- Restore NuGet packages -->
    <Message Importance="High" Text="Restoring NuGet packages"/>
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileDirectory)Xenko.Tests.%(XenkoTestCategoriesItem.Identity).slnf" />
    <!-- Build -->
    <Message Importance="High" Text="Building unit tests"/>
    <MSBuild Projects="$(MSBuildThisFileDirectory)Xenko.Tests.%(XenkoTestCategoriesItem.Identity).slnf" />
    <!-- Run tests -->
    <Message Importance="High" Text="Running unit tests"/>
    <Exec Command="dotnet test Xenko.Tests.%(XenkoTestCategoriesItem.Identity).slnf --no-build" IgnoreStandardErrorWarningFormat="true"/>
  </Target>
  
  <ItemGroup>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Engine.Tests\Xenko.Engine.Tests.$(PlatformToBuild).csproj"/>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Audio.Tests\Xenko.Audio.Tests.$(PlatformToBuild).csproj"/>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Graphics.Tests\Xenko.Graphics.Tests.$(PlatformToBuild).csproj"/>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Graphics.Tests.10_0\Xenko.Graphics.Tests.10_0.$(PlatformToBuild).csproj"/>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Input.Tests\Xenko.Input.Tests.$(PlatformToBuild).csproj"/>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Particles.Tests\Xenko.Particles.Tests.$(PlatformToBuild).csproj"/>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Physics.Tests\Xenko.Physics.Tests.$(PlatformToBuild).csproj"/>
  </ItemGroup>
  
  <ItemGroup>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Engine.Tests\Xenko.Engine.Tests-Signed.apk"/>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Physics.Tests\Xenko.Physics.Tests-Signed.apk"/>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Audio.Tests\Xenko.Audio.Tests-Signed.apk"/>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Graphics.Tests.10_0\Xenko.Graphics.Tests_10_0-Signed.apk"/>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Graphics.Tests\Xenko.Graphics.Tests-Signed.apk"/>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Input.Tests\Xenko.Input.Tests-Signed.apk"/>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Particles.Tests\Xenko.Particles.Tests-Signed.apk"/>
  </ItemGroup>
  
  <Target Name="RunTestsMobile" DependsOnTargets="DownloadXunitRunnerConsole" Outputs="%(MobileUnitTestProject.Identity)">
    <PropertyGroup>
      <XenkoRoot>$(MSBuildThisFileDirectory)..\</XenkoRoot>
      <XenkoPlatform></XenkoPlatform>
      <XenkoPlatform Condition="'$(PlatformToBuild)' == 'iOS'">Platform=iPhone</XenkoPlatform>
      <XenkoPlatform Condition="'$(PlatformToBuild)' == 'Android'">Platform=Android</XenkoPlatform>
      <XenkoBuildOptions></XenkoBuildOptions>
      <XenkoBuildOptions Condition="'$(PlatformToBuild)' == 'iOS'">ServerAddress=pc13095;ServerUser=virgile;BuildIpa=true;MtouchUseLlvm=true</XenkoBuildOptions>
      <XenkoBuildTargets>Rebuild</XenkoBuildTargets>
      <XenkoBuildTargets Condition="'$(PlatformToBuild)' == 'Android'">SignAndroidPackage</XenkoBuildTargets>
      <XenkoBuildConfig>Release</XenkoBuildConfig>
      <XenkoBuildConfig Condition="'$(PlatformToBuild)' == 'Windows'">Debug</XenkoBuildConfig>
    </PropertyGroup>
  
    <MSBuild Projects ="%(MobileUnitTestProject.Identity)" Targets="SignAndroidPackage"
             Properties="SolutionName=Xenko.Android; SolutionDir=$(MSBuildThisFileDirectory);$(XenkoPlatform);Configuration=$(XenkoBuildConfig);$(XenkoBuildOptions)">
    </MSBuild>
    <Exec IgnoreExitCode="True" Command='taskkill /F /FI "Imagename eq Xenko.Core.Assets.CompilerApp*"' />
    
    <Exec Condition="'$(PlatformToBuild)' == 'Android'" Command="$(XenkoRoot)sources\tools\Xenko.TestRunner\bin\Release\net472\Xenko.TestRunner.exe %(MobileUnitTestApk.Identity)">
      <Output TaskParameter="ExitCode" ItemName="exitCode" />
    </Exec>
  </Target>
  
  <!--
  Package Launcher
  -->
  <Target Name="PackageLauncher" DependsOnTargets="LauncherPrerequisitesInstaller">
    <ItemGroup>
      <FilesToDeleteLauncher Include="$(XenkoRoot)bin\launcher\*.nupkg"/>
    </ItemGroup>

    <!-- Note: we avoid building again if BuildWindows was already ran just before -->
    <Delete Files="@(FilesToDeleteLauncher)"/>
    
    <!-- Generate the nuget package for the launcher application -->
    <Exec Command='"$(NuGetPath)" pack "$(XenkoRoot)sources\launcher\Xenko.Launcher\Xenko.Launcher.nuspec" -BasePath "$(XenkoRoot)sources\launcher\Xenko.Launcher\bin\Release\publish" -OutputDirectory "$(XenkoRoot)bin\launcher"' />
  </Target>
  
  <!--
  Package Installer: XenkoSetup.exe
  -->
  <Target Name="PackageInstallerSimple" DependsOnTargets="PackageLauncher">
    <Delete Files="$(XenkoRoot)bin\launcher\XenkoSetup.exe"/>
    <!-- Run advanced installer -->
    <Exec Command='"$(AdvancedInstallerPath)" /rebuild "$(XenkoRoot)sources\launcher\Setup\setup.aip"'/>
    <Copy SourceFiles="$(XenkoRoot)sources\launcher\Setup\setup-SetupFiles\XenkoSetup.exe" DestinationFolder="$(XenkoRoot)bin\launcher"/>
  </Target>
  <Target Name="PackageInstallerCustom" DependsOnTargets="PackageLauncher">
    <Error Condition="'$(CustomInstaller)' == '' Or '$(CustomInstallerStoreUrl)' == ''" Text="When CustomInstaller is set, CustomInstallerStoreUrl also needs to be defined"/>
    <PropertyGroup>
      <CustomInstallerNoSpace>$(CustomInstaller.Replace(' ', ''))</CustomInstallerNoSpace>
    </PropertyGroup>
  
    <Delete Files="XenkoSetup$(CustomInstallerNoSpace).exe"/>
    <!-- Make sure it is deleted otherwise Advanced Installer complains (in case previous run didn't complete -->
    <Delete Files="$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip"/>
    <!-- Duplicate setup.aip with different IDs -->
    <Exec Command='"$(AdvancedInstallerPath)" /edit "$(XenkoRoot)sources\launcher\Setup\setup.aip" /DuplicateProject "$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip"'/>
    <!-- Edit a few parameters -->
    <Exec Command='"$(AdvancedInstallerPath)" /edit "$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip" /SetProperty BuildExeName="XenkoSetup$(CustomInstallerNoSpace)"'/>
    <Exec Command='"$(AdvancedInstallerPath)" /edit "$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip" /SetProperty ProductName="Xenko $(CustomInstaller)"'/>
    <Exec Command='"$(AdvancedInstallerPath)" /edit "$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip" /SetProperty AI_PRODUCTNAME_ARP="Xenko $(CustomInstaller)"'/>

    <!-- Backup store.config -->
    <Copy SourceFiles="$(XenkoRoot)sources\launcher\Xenko.LauncherApp\bin\Release\store.config" DestinationFiles="$(XenkoRoot)sources\launcher\Xenko.LauncherApp\bin\Release\store.config.backup"/>
    
    <!-- Update store.config with additional parameters -->
    <Exec Command='"$(NuGetPath)" sources Add -Name "Xenko $(CustomInstaller)" -Source "$(CustomInstallerStoreUrl)" -ConfigFile "$(XenkoRoot)sources\launcher\Xenko.LauncherApp\bin\Release\store.config"'/>
    
    <!-- Run advanced installer -->
    <Exec Command='"$(AdvancedInstallerPath)" /rebuild "$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip"'/>
    <Copy SourceFiles="$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace)-SetupFiles\XenkoSetup$(CustomInstallerNoSpace).exe" DestinationFolder="$(MSBuildThisFileDirectory)"/>
    <Delete Files="$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip"/>
    
    <!-- Restore store.config -->
    <Copy SourceFiles="$(XenkoRoot)sources\launcher\Xenko.LauncherApp\bin\Release\store.config.backup" DestinationFiles="$(XenkoRoot)Xenko.LauncherApp\bin\Release\store.config"/>
    <Delete Files="$(XenkoRoot)sources\launcher\Xenko.LauncherApp\bin\Release\store.config.backup"/>	
  </Target>
  <PropertyGroup>
    <!-- Choose proper target to execute -->
    <PackageInstallerTarget Condition="'$(CustomInstaller)' == ''">PackageInstallerSimple</PackageInstallerTarget>
    <PackageInstallerTarget Condition="'$(CustomInstaller)' != ''">PackageInstallerCustom</PackageInstallerTarget>
  </PropertyGroup>
  <Target Name="PackageInstaller" DependsOnTargets="$(PackageInstallerTarget)"/>
  
  <!--
  Package Installer: launcher-prerequisites.exe
  -->
  <Target Name="LauncherPrerequisitesInstaller">
    <Exec Command='"$(AdvancedInstallerPath)" /rebuild "$(XenkoRoot)sources\launcher\Prerequisites\launcher-prerequisites.aip"'/>
  </Target>

  <!--
  Perform a full build: Build, Package and PackageInstaller
  -->
  <Target Name="FullBuildLauncher">
    <CallTarget Targets="BuildLauncher"/>
    <CallTarget Targets="PackageInstaller"/>
  </Target>
  
  <!--
  Publish Launcher nupkg from this folder to the store
  -->
  <Target Name="PublishLauncher">
    <Error Condition="'$(XenkoStoreApiKey)' == ''" Text="Missing env variable XenkoStoreApiKey"/>
    <Exec Command='"$(NuGetPath)" push ..\bin\launcher\*.nupkg -ApiKey $(XenkoStoreApiKey) -Source $(XenkoStoreUrl) -NoSymbols'/>
  </Target>
  
  <Target Name="BuildLauncher">
    <PropertyGroup>
      <XenkoSolution>Xenko.Launcher</XenkoSolution>
    </PropertyGroup>
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=Windows;XenkoSolution=$(XenkoSolution)"/>
    <MSBuild Projects="..\sources\launcher\Xenko.Launcher\Xenko.Launcher.csproj" Targets="Publish" Properties="$(BuildProperties);PublishProfile=FolderProfile;SolutionName=Xenko.Launcher" />
  </Target>

</Project>
