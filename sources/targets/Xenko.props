<!-- Build file pre-included by all Xenko projects -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <XenkoSdkTargets>$(MSBuildThisFileDirectory)Xenko.targets</XenkoSdkTargets>
    <XenkoAssemblyProcessorGlobal>true</XenkoAssemblyProcessorGlobal>
    <XenkoAssemblyProcessorDefaultOptions>--auto-notify-property --parameter-key --auto-module-initializer --serialization</XenkoAssemblyProcessorDefaultOptions>
    <XenkoAssemblyProcessorOptions Condition="'$(XenkoAssemblyProcessorOptions)' == ''">$(XenkoAssemblyProcessorDefaultOptions)</XenkoAssemblyProcessorOptions>
  </PropertyGroup>

  <!--Import Xenko settings-->
  <Import Project="$(MSBuildThisFileDirectory)Xenko.Core.props"/>

  <!-- Default GraphicsApi -->
  <PropertyGroup>
    <XenkoGraphicsApisWindows Condition="'$(XenkoGraphicsApisWindows)' == ''">Direct3D11;Direct3D12;OpenGL;OpenGLES;Vulkan</XenkoGraphicsApisWindows>
    <XenkoGraphicsApisLinux Condition="'$(XenkoGraphicsApisLinux)' == ''">Vulkan;OpenGL</XenkoGraphicsApisLinux>
    <XenkoGraphicsApis Condition="('$(XenkoGraphicsApis)' == '' Or '$(XenkoGraphicsApiDependentBuildAll)' == 'true') And '$(XenkoPlatform)' == 'Windows'">$(XenkoGraphicsApisWindows)</XenkoGraphicsApis>
    <XenkoGraphicsApis Condition="('$(XenkoGraphicsApis)' == '' Or '$(XenkoGraphicsApiDependentBuildAll)' == 'true') And '$(XenkoPlatform)' == 'Linux'">$(XenkoGraphicsApisLinux)</XenkoGraphicsApis>

    <XenkoDefaultGraphicsApi Condition="'$(XenkoGraphicsApis)' != ''">$(XenkoGraphicsApis.Split(';', StringSplitOptions.RemoveEmptyEntries)[0])</XenkoDefaultGraphicsApi>
    <XenkoDefaultGraphicsApi Condition="'$(XenkoPlatform)' == 'UWP'">Direct3D11</XenkoDefaultGraphicsApi>
    <XenkoDefaultGraphicsApi Condition="'$(XenkoPlatform)' == 'macOS'">Vulkan</XenkoDefaultGraphicsApi>
    <XenkoDefaultGraphicsApi Condition="'$(XenkoPlatform)' == 'Android'">OpenGLES</XenkoDefaultGraphicsApi>
    <XenkoDefaultGraphicsApi Condition="'$(XenkoPlatform)' == 'iOS'">OpenGLES</XenkoDefaultGraphicsApi>
  </PropertyGroup>
  <!-- Some platforms only have a single graphics API.
      If yes, set it right away and disable XenkoGraphicsApiDependent (only for inner builds, check using TargetFrameworks) -->
  <PropertyGroup Condition="'$(XenkoGraphicsApiDependent)' == 'true' And !('$(TargetFrameworks)' != '' and '$(TargetFramework)' == '')">
    <XenkoGraphicsApiDependent Condition="'$(XenkoPlatform)' == 'UWP'">false</XenkoGraphicsApiDependent>
    <XenkoGraphicsApiDependent Condition="'$(XenkoPlatform)' == 'macOS'">false</XenkoGraphicsApiDependent>
    <XenkoGraphicsApiDependent Condition="'$(XenkoPlatform)' == 'Android'">false</XenkoGraphicsApiDependent>
    <XenkoGraphicsApiDependent Condition="'$(XenkoPlatform)' == 'iOS'">false</XenkoGraphicsApiDependent>
    <XenkoGraphicsApi Condition="'$(XenkoGraphicsApiDependent)' == 'false'">$(XenkoDefaultGraphicsApi)</XenkoGraphicsApi>
  </PropertyGroup>
  <!-- Setup default GraphicsApi for design-time build (that's the one used for Visual Studio intellisense, so it can be useful to override when working on a specific API) -->
  <PropertyGroup Condition="'$(DesignTimeBuild)' == 'true' And '$(XenkoGraphicsApiDependent)' == 'true' And '$(XenkoGraphicsApi)' == ''">
    <XenkoGraphicsApi Condition="'$(XenkoGraphicsApi)' == ''">$(XenkoDefaultGraphicsApiDesignTime)</XenkoGraphicsApi>
    <XenkoGraphicsApi Condition="'$(XenkoGraphicsApi)' == ''">$(XenkoDefaultGraphicsApi)</XenkoGraphicsApi>
  </PropertyGroup>

  <!-- 
    Settings XenkoGraphicsApi specific
  -->
  <PropertyGroup Condition=" '$(XenkoGraphicsApi)' == 'Direct3D11' ">
    <XenkoGraphicsApiDefines>XENKO_GRAPHICS_API_DIRECT3D;XENKO_GRAPHICS_API_DIRECT3D11</XenkoGraphicsApiDefines>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(XenkoGraphicsApi)' == 'Null' ">
    <XenkoGraphicsApiDefines>XENKO_GRAPHICS_API_NULL</XenkoGraphicsApiDefines>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(XenkoGraphicsApi)' == 'OpenGL' ">
    <XenkoGraphicsApiDefines>XENKO_GRAPHICS_API_OPENGL;XENKO_GRAPHICS_API_OPENGLCORE</XenkoGraphicsApiDefines>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(XenkoGraphicsApi)' == 'OpenGLES' ">
    <XenkoGraphicsApiDefines>XENKO_GRAPHICS_API_OPENGL;XENKO_GRAPHICS_API_OPENGLES</XenkoGraphicsApiDefines>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(XenkoGraphicsApi)' == 'Vulkan' ">
    <XenkoGraphicsApiDefines>XENKO_GRAPHICS_API_VULKAN</XenkoGraphicsApiDefines>
  </PropertyGroup>

  <!-- 
    Settings XenkoPlatform specific
  -->
  <PropertyGroup Condition=" '$(XenkoPlatform)' == 'UWP' ">
    <ProjectLockFile Condition="'$(ProjectLockFile)' == ''">$(MSBuildThisFileDirectory)..\build\project.lock.json</ProjectLockFile>
  </PropertyGroup>

  <!-- 
    Global Defines
  -->
  <PropertyGroup>
    <DefineConstants>$(DefineConstants);$(XenkoGraphicsApiDefines)</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <XenkoUI Condition="'$(XenkoPlatform)' == 'Windows' Or '$(XenkoPlatform)' == 'Linux' Or '$(XenkoPlatform)' == 'macOS'">SDL</XenkoUI>
    <XenkoUI Condition="'$(XenkoGraphicsApi)' == 'OpenGL'">$(XenkoUI);OPENTK</XenkoUI>
    <XenkoUI Condition="$(TargetFramework.EndsWith('-windows')) AND ('$(XenkoGraphicsApi)' == 'Direct3D11' Or '$(XenkoGraphicsApi)' == 'Direct3D12')">$(XenkoUI);WINFORMS;WPF</XenkoUI>

    <DefineConstants Condition="$(XenkoUI.Contains('SDL'))">$(DefineConstants);XENKO_UI_SDL</DefineConstants>
    <DefineConstants Condition="$(XenkoUI.Contains('OPENTK'))">$(DefineConstants);XENKO_UI_OPENTK</DefineConstants>
    <DefineConstants Condition="$(XenkoUI.Contains('WINFORMS'))">$(DefineConstants);XENKO_UI_WINFORMS</DefineConstants>
    <DefineConstants Condition="$(XenkoUI.Contains('WPF'))">$(DefineConstants);XENKO_UI_WPF</DefineConstants>
  </PropertyGroup>
  <!-- Build the XenkoUIList using the value of XenkoUI -->
  <ItemGroup Condition="'$(XenkoUIList)' == ''">
    <XenkoUIList Condition="'$(XenkoUI)' != ''" Include="$(XenkoUI)" />
    <XenkoUIList Condition="'$(XenkoUI)' == ''" Include="None" />
  </ItemGroup>

  <PropertyGroup>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <!-- Pack target -->
  <!--<UsingTask TaskName="Xenko.Core.Tasks.PackAssets" AssemblyFile="$(MSBuildThisFileDirectory)..\core\Xenko.Core.Tasks\bin\$(Configuration)\$(XenkoEditorTargetFramework)\Xenko.Core.Tasks.exe" />-->
  <Target Name="PrepareXenkoAssetsForPack" BeforeTargets="_GetPackageFiles" Condition="'$(XenkoPackAssets)' == 'true'">
    <!-- We use exec version rather than task version, otherwise file will be locked during rebuild -->
    <!--<PackAssets ProjectFile="$(MSBuildProjectFile)" IntermediatePackagePath="$(IntermediateOutputPath)\xenko">
      <Output TaskParameter="GeneratedItems" ItemName="None"/>
    </PackAssets>-->
    <Exec Command="&quot;$(MSBuildThisFileDirectory)..\core\Xenko.Core.Tasks\bin\$(Configuration)\$(XenkoEditorTargetFramework)\Xenko.Core.Tasks.exe&quot; pack-assets &quot;$(MSBuildProjectFile)&quot; &quot;$(IntermediateOutputPath)\xenko&quot;" ConsoleToMsBuild="true">
      <Output TaskParameter="ConsoleOutput" ItemName="PackAssetsLine" />
    </Exec>
    <ItemGroup>
      <PackAssetsLine Update="@(PackAssetsLine)">
        <SourcePath>$([System.String]::new('%(Identity)').Split('|')[0])</SourcePath>
        <PackagePath>$([System.String]::new('%(Identity)').Split('|')[1])</PackagePath>
      </PackAssetsLine>
      <None Include="%(PackAssetsLine.SourcePath)">
        <Pack>true</Pack>
        <PackagePath>%(PackAssetsLine.PackagePath)</PackagePath>
      </None>
    </ItemGroup>
  </Target>

</Project>
