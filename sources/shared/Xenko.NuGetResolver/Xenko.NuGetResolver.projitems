<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    <HasSharedItems>true</HasSharedItems>
    <SharedGUID>00b72ed7-00e9-47f7-868d-8162027cd068</SharedGUID>
  </PropertyGroup>
  <PropertyGroup Label="Configuration">
    <Import_RootNamespace>Xenko.NuGetResolver</Import_RootNamespace>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="$(MSBuildThisFileDirectory)NuGetAssemblyResolver.cs" />
    <Compile Include="$(MSBuildThisFileDirectory)RestoreHelper.cs" />
  </ItemGroup>
  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);IncludeNuGetResolverAssemblies</TargetsForTfmSpecificBuildOutput>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.config</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <UseWPF Condition="'$(XenkoNuGetResolverUX)' == 'true'">true</UseWPF>
  </PropertyGroup>
  <Target Name="IncludeNuGetResolverAssemblies">
    <ItemGroup>
      <BuildOutputInPackage Include="$(OutputPath)NuGet*.dll" />
      <BuildOutputInPackage Include="$(OutputPath)Newtonsoft.Json.dll" />
    </ItemGroup>
  </Target>
  <!-- If .NET Core, we embed a loader which will resolve the nuget packages for us -->
  <PropertyGroup>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.loaderdata</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <DefineConstants Condition="'$(XenkoNuGetResolverUX)' == 'true'">XENKO_NUGET_RESOLVER_UX;$(DefineConstants)</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="$(TargetFramework.StartsWith('netcoreapp')) Or $(TargetFramework.StartsWith('net5'))">
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.loaderdata</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);_XenkoPackageNuGetLoader</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>
  <Target Name="_XenkoPackageNuGetLoader">
    <PropertyGroup>
      <_XenkoNuGetLoaderWindowsDesktop Condition="'$(_MicrosoftNetSdkWindowsDesktop)' == 'true'">true</_XenkoNuGetLoaderWindowsDesktop>
      <_XenkoNuGetLoaderApplicationIcon Condition="'$(ApplicationIcon)' != ''">$(MSBuildProjectDirectory)\$(ApplicationIcon)</_XenkoNuGetLoaderApplicationIcon>
    </PropertyGroup>
    <!-- Build NuGetLoader project, using same application icon and same Sdk (so that WinForms/WPF can also work) -->
    <MSBuild Projects="$(SolutionDir)..\sources\tools\Xenko.NuGetLoader\Xenko.NuGetLoader.csproj" Properties="Configuration=$(Configuration);OutputType=$(OutputType);ApplicationIcon=$(_XenkoNuGetLoaderApplicationIcon);XenkoApplicationName=$(AssemblyName);XenkoNuGetLoaderWindowsDesktop=$(_XenkoNuGetLoaderWindowsDesktop);XenkoSTAThreadOnMain=$(XenkoSTAThreadOnMain);XenkoNuGetResolverUX=$(XenkoNuGetResolverUX)" />
    <!-- Write a small data file containing package and version to use for loader (let's not rely on NuGet layout/files such as .nuspec file in case it changes in the future) -->
    <WriteLinesToFile File="$(OutputPath)Xenko.NuGetLoader.loaderdata" Lines="$(PackageId)/$(PackageVersion)" Overwrite="true" />
    <ItemGroup>
      <BuildOutputInPackage Include="$(OutputPath)Xenko.NuGetLoader.loaderdata" />
      <BuildOutputInPackage Include="$(SolutionDir)..\sources\tools\Xenko.NuGetLoader\bin\$(Configuration)\$(AssemblyName)\$(TargetFramework)\*.*" />
      <!-- Rename Xenko.NuGetLoader.exe into the expected application name -->
      <BuildOutputInPackage Update="@(BuildOutputInPackage->'%(Identity)')" Condition="'%(Filename)%(Extension)' == 'Xenko.NuGetLoader.exe'">
        <TargetPath>%(RecursiveDir)$(AssemblyName).exe</TargetPath>
      </BuildOutputInPackage>
    </ItemGroup>
  </Target>
</Project>